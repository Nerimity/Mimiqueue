{"version":3,"sources":["../src/createQueue.ts","../src/createQueueProcessor.ts"],"sourcesContent":["import { RedisClient } from \"./types\";\r\n\r\ninterface createQueueOpts<T = () => any> {\r\n  redisClient: RedisClient;\r\n  name: string;\r\n}\r\n\r\ninterface AddOpts {\r\n  groupName?: string;\r\n}\r\n\r\nexport const createQueue = (opts: createQueueOpts) => {\r\n  const add = async <T extends () => any>(\r\n    func: T,\r\n    opts?: AddOpts\r\n  ): Promise<Awaited<ReturnType<T>>> => {\r\n    return func();\r\n  };\r\n\r\n  return {\r\n    add,\r\n  };\r\n};\r\n","import { RedisClient } from \"./types\";\r\n\r\ninterface CreateQueueProcessorOpts {\r\n  redisClient: RedisClient;\r\n}\r\n/**\r\n *  This function should be ran in the main thread.\r\n *\r\n */\r\nexport const createQueueProcessor = (opts: CreateQueueProcessorOpts) => {\r\n  const redisClient = opts.redisClient;\r\n  redisClient.pSubscribe(\"mq:*\", (channel, message) => {});\r\n};\r\n"],"mappings":"AAWO,IAAMA,EAAeC,IAQnB,CACL,IARU,MACVC,EACAD,IAEOC,EAAK,CAKd,GCZK,IAAMC,EAAwBC,GAAmC,CAClDA,EAAK,YACb,WAAW,OAAQ,CAACC,EAASC,IAAY,CAAC,CAAC,CACzD","names":["createQueue","opts","func","createQueueProcessor","opts","channel","message"]}
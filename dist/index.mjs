import{Queue as b}from"async-await-queue";var g=class{addQueue=new b(1);redisClient;name;prefix;ids=new Map;sub;processFn;constructor(e){this.prefix=e.prefix||"mimiqueue",this.processFn=e.process,this.name=e.name,this.redisClient=e.redisClient,this.sub=this.redisClient.duplicate(),this.sub.connect(),this.sub.subscribe(this.prefix,async n=>{let t=JSON.parse(n);if(t[0]==="start"&&this.startJob(t[1],t[2],t[3]),t[0]==="remove"){if(this.name!==t[1])return;this.ids.delete(t[2])}if(t[0]==="finish"){if(this.name!==t[1]||!this.ids.delete(t[2]))return;let s=await Q(this,t[3]);if(!s)return;let r=JSON.stringify(["start",this.name,s.id,t[3]]);this.redisClient.publish(this.prefix,r)}})}async startJob(e,n,t){if(e!==this.name)return;let s=this.ids.get(n);if(!s)return;let r=await u(this,n,t),a=JSON.parse(r.data||"null");await this.processFn(a).then(o=>s[0](o)).catch(o=>s[1](o)),await J(this,n,t),this.redisClient.publish(this.prefix,JSON.stringify(["finish",e,n,t]))}async add(e,n){let t=await this.addQueue.run(async()=>{let s=await w(this,e,n?.groupName),r=await x(this,n?.groupName);if(r&&await C(this,s,n?.groupName),!r){await h(this,s,n?.groupName);let a=JSON.stringify(["start",this.name,s.toString(),n?.groupName]);this.redisClient.publish(this.prefix,a)}return s});return new Promise((s,r)=>{this.ids.set(t.toString(),[s,r])})}};async function p(i){return await i.redisClient.incr(`${i.prefix}:${i.name}:id`)}async function w(i,e,n){let t=await p(i),s=`${i.prefix}:${i.name}`;return n&&(s+=`:${n}`),s+=`:${t}`,await i.redisClient.hSet(s,{data:JSON.stringify(e),createdAt:Date.now()}),t}function C(i,e,n){let t=`${i.prefix}:${i.name}`;return n&&(t+=`:${n}`),t+=":wait",i.redisClient.rPush(t,e.toString())}function h(i,e,n){let t=`${i.prefix}:${i.name}`;return n&&(t+=`:${n}`),t+=":active",i.redisClient.set(t,e.toString())}async function x(i,e){let n=`${i.prefix}:${i.name}`;e&&(n+=`:${e}`);let t=i.redisClient.multi();t.get(`${n}:active`),t.lLen(`${n}:wait`);let[s,r]=await t.exec();return(s?1:0)+r}async function u(i,e,n){let t=`${i.prefix}:${i.name}`;return n&&(t+=`:${n}`),i.redisClient.hGetAll(`${t}:${e.toString()}`)}async function J(i,e,n){let t=`${i.prefix}:${i.name}`;n&&(t+=`:${n}`),t+=":active";let s=`${i.prefix}:${i.name}`;n&&(s+=`:${n}`),s+=`:${e}`;let r=i.redisClient.multi();return r.del(t),r.del(s),r.exec()}async function v(i,e,n){let t=`${i.prefix}:${i.name}`;return n&&(t+=`:${n}`),t+=":wait",i.redisClient.lRem(t,1,e.toString())}async function Q(i,e){let n=`${i.prefix}:${i.name}`;e&&(n+=`:${e}`),n+=":wait";let t=await i.redisClient.lIndex(n,0);if(!t)return null;let s=u(i,t,e);return s?(await v(i,t,e),await h(i,t,e),{job:s,id:t}):null}import{Queue as S}from"async-await-queue";var c=class{addQueue=new S(1);redisClient;name;prefix;ids=new Map;sub;constructor(e){this.prefix=e.prefix||"mimiqueue",this.name=e.name,this.redisClient=e.redisClient,this.sub=this.redisClient.duplicate(),this.sub.connect(),this.sub.subscribe(this.prefix,async n=>{let t=JSON.parse(n);if(t[0]==="remove"){if(this.name!==t[1])return;this.ids.delete(t[2])}if(t[0]==="start"&&this.startJob(t[1],t[2],t[3]),t[0]==="finish"){if(this.name!==t[1]||!this.ids.delete(t[2]))return;let s=await M(this,t[3]);if(!s)return;let r=JSON.stringify(["start",this.name,s.id,t[3]]);this.redisClient.publish(this.prefix,r)}})}async startJob(e,n,t){if(e!==this.name)return;let s=this.ids.get(n);s&&s()}async start(e){let n=await this.addQueue.run(async()=>{let t=await O(this,e?.groupName),s=await k(this,e?.groupName);if(s&&await T(this,t,e?.groupName),!s){await y(this,t,e?.groupName);let r=JSON.stringify(["start",this.name,t.toString(),e?.groupName]);this.redisClient.publish(this.prefix,r)}return t});return new Promise(t=>{this.ids.set(n.toString(),()=>t(async()=>{if(!this.ids.get(n.toString()))return;let r=n.toString();await P(this,r,e?.groupName),this.redisClient.publish(this.prefix,JSON.stringify(["finish",this.name,r,e?.groupName]))}))})}};async function A(i){return await i.redisClient.incr(`${i.prefix}:${i.name}:id`)}async function O(i,e){let n=await A(i),t=`${i.prefix}:${i.name}`;return e&&(t+=`:${e}`),t+=`:${n}`,await i.redisClient.hSet(t,{createdAt:Date.now()}),n}function T(i,e,n){let t=`${i.prefix}:${i.name}`;return n&&(t+=`:${n}`),t+=":wait",i.redisClient.rPush(t,e.toString())}function y(i,e,n){let t=`${i.prefix}:${i.name}`;return n&&(t+=`:${n}`),t+=":active",i.redisClient.set(t,e.toString())}async function k(i,e){let n=`${i.prefix}:${i.name}`;e&&(n+=`:${e}`);let t=i.redisClient.multi();t.get(`${n}:active`),t.lLen(`${n}:wait`);let[s,r]=await t.exec();return(s?1:0)+r}async function R(i,e,n){let t=`${i.prefix}:${i.name}`;return n&&(t+=`:${n}`),i.redisClient.hGetAll(`${t}:${e.toString()}`)}async function P(i,e,n){let t=`${i.prefix}:${i.name}`;n&&(t+=`:${n}`),t+=":active";let s=`${i.prefix}:${i.name}`;n&&(s+=`:${n}`),s+=`:${e}`;let r=i.redisClient.multi();return r.del(t),r.del(s),r.exec()}async function W(i,e,n){let t=`${i.prefix}:${i.name}`;return n&&(t+=`:${n}`),t+=":wait",i.redisClient.lRem(t,1,e.toString())}async function M(i,e){let n=`${i.prefix}:${i.name}`;e&&(n+=`:${e}`),n+=":wait";let t=await i.redisClient.lIndex(n,0);if(!t)return null;let s=R(i,t,e);return s?(await W(i,t,e),await y(i,t,e),{job:s,id:t}):null}var $=class{_altQueue;constructor(e){this._altQueue=new c(e)}async add(e,n){let t=await this._altQueue.start(n);e().catch(s=>{console.error(s)}).finally(()=>{t()})}};var d=new Map;async function U(i){let e=i.prefix||"mimiqueue",n=i.redisClient,t=n.duplicate();await t.connect(),t.subscribe(e,async s=>{let r=JSON.parse(s);if(r[0]==="start"){let a=r[1],o=r[2];d.set(`${a}${o}`,setTimeout(async()=>{let l=JSON.stringify(["remove",r[1],r[2],r[3]]);n.publish(e,l),await F(n,a,o,e,r[3]);let f=await L(n,r[1],e,r[3]);if(!f)return;let m=JSON.stringify(["start",r[1],f.id,r[3]]);n.publish(e,m)},i.duration||3e4))}if(r[0]==="finish"){let a=r[1],o=r[2],l=d.get(`${a}${o}`);clearTimeout(l),d.delete(`${a}${o}`)}})}async function I(i,e,n,t,s){let r=`${t}:${e}`;return s&&(r+=`:${s}`),r+=":wait",i.lRem(r,1,n.toString())}async function L(i,e,n,t){let s=`${n}:${e}`;t&&(s+=`:${t}`),s+=":wait";let r=await i.lIndex(s,0);if(!r)return null;let a=j(i,e,r,n,t);return a?(await I(i,e,r,n,t),await B(i,e,r,n,t),{job:a,id:r}):null}async function j(i,e,n,t,s){let r=`${t}:${e}`;return s&&(r+=`:${s}`),i.hGetAll(`${r}:${n.toString()}`)}function B(i,e,n,t,s){let r=`${t}:${e}`;return s&&(r+=`:${s}`),r+=":active",i.set(r,n.toString())}function F(i,e,n,t,s){let r=`${t}:${e}`;return s&&(r+=`:${s}`),r+=":active",i.del(r)}export{c as AltQueue,$ as AltQueue2,g as Queue,U as handleTimeout};
//# sourceMappingURL=index.mjs.map
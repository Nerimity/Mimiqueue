function s(...t){return t.filter(Boolean).join(":")}var p=async(t,n)=>(await t.incr(`mq:${n}:count`)).toString(),g=t=>{let n=new Map,m=async()=>await p(t.redisClient,t.name),c=async(r,i)=>await t.redisClient.lPos(s("mq",t.name,i,"wait"),r),d=t.redisClient.duplicate(),e=t.redisClient.duplicate();return e.connect(),d.connect().then(()=>{t.redisClient.publish("mq",JSON.stringify({event:"options",name:t.name,minTime:t.minTime}))}),e.subscribe("mq",async r=>{let i=JSON.parse(r);if(i.name===t.name&&i.event==="start"){let a=n.get(i.id);a&&(a.func().finally(()=>{t.redisClient.publish("mq",JSON.stringify({...i,event:"finish"}))}),n.delete(i.id))}}),{add:async(r,i)=>{let a=i?.id||await m();return await t.redisClient.rPush(s("mq",t.name,i?.groupName,"wait"),a),new Promise((u,f)=>{n.set(a.toString(),{func:async()=>u(await r().catch(f))}),t.redisClient.publish("mq",JSON.stringify({event:"add",name:t.name,groupName:i?.groupName,id:a}))})},genId:m,getQueuePosition:c}};import{Queue as y}from"async-await-queue";import{setTimeout as l}from"timers/promises";var v=async t=>{let n=t.redisClient,m=new Map,c=n.duplicate();await c.connect(),await c.subscribe("mq",async d=>{let e=JSON.parse(d);if(e.event==="options"){if(m.has(e.name))return;m.set(e.name,{minTime:e.minTime,localQueue:new y(1)});return}let o=m.get(e.name),r=o?.localQueue;!o||!r||r.run(async()=>{if(e.event==="add"){let i=s("mq",e.name,e.groupName,"active"),a=s("mq",e.name,e.groupName,"wait");if(await n.lLen(i))return;await n.lRem(a,1,e.id),await n.rPush(i,e.id),o.minTime&&await l(o.minTime),n.publish("mq",JSON.stringify({...e,event:"start"}))}if(e.event==="finish"){let i=s("mq",e.name,e.groupName,"active");await n.lRem(i,1,e.id);let a=s("mq",e.name,e.groupName,"wait"),u=await n.lPop(a);u&&(await n.rPush(i,u),o.minTime&&await l(o.minTime),n.publish("mq",JSON.stringify({...e,id:u,event:"start"})))}})})};export{g as createQueue,v as createQueueProcessor};
//# sourceMappingURL=index.mjs.map